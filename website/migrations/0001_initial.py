# Copyright 2022 Owen M. Jones. All rights reserved.
#
# This file is part of MemberZone.
#
# MemberZone is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License 
# as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# MemberZone is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along with MemberZone. If not, see <https://www.gnu.org/licenses/>.
# Generated by Django 4.0.2 on 2022-03-06 14:42

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
	initial = True

	dependencies = [
		('auth', '0012_alter_user_first_name_max_length'),
	]

	operations = [
		migrations.CreateModel(
			name='SiteUser',
			fields=[
				('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
				('password', models.CharField(max_length=128, verbose_name='password')),
				('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
				('is_superuser', models.BooleanField(default=False,
													 help_text='Designates that this user has all permissions without explicitly assigning them.',
													 verbose_name='superuser status')),
				('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
				('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
				('is_staff', models.BooleanField(default=False,
												 help_text='Designates whether the user can log into this admin site.',
												 verbose_name='staff status')),
				('is_active', models.BooleanField(default=True,
												  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
												  verbose_name='active')),
				('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
				('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
				('groups', models.ManyToManyField(blank=True,
												  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
												  related_name='user_set', related_query_name='user', to='auth.Group',
												  verbose_name='groups')),
				('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
															related_name='user_set', related_query_name='user',
															to='auth.Permission', verbose_name='user permissions')),
			],
			options={
				'verbose_name': 'user',
				'verbose_name_plural': 'users',
				'abstract': False,
			},
		),
	]
